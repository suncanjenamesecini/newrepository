{"version":3,"sources":["components/Navigation/Navigation.js","components/Dobrodoslica/Dobrodoslica.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","href","Dobrodoslica","style","height","width","particlesOptions","particles","number","value","density","enable","value_area","App","params","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+PAmBeA,G,OAhBI,WAClB,OACC,yBAAKC,UAAU,oBACd,wBAAIA,UAAU,YACJ,4BAAI,uBAAGC,KAAK,iBAAR,+CACJ,4BAAI,uBAAGA,KAAK,6EAAR,qDACb,4BAAI,uBAAGA,KAAK,yEAAR,yCACJ,4BAAI,uBAAGA,KAAK,uEAAR,mCACJ,4BAAI,uBAAGA,KAAK,yEAAR,yCACK,4BAAI,uBAAGA,KAAK,mEAAR,uBACb,wBAAID,UAAU,QAAO,uBAAGC,KAAK,yEAAR,wCCOVC,EAjBM,WACpB,OACC,yBAAKF,UAAU,gBAEb,yBAAKG,MAAO,CAAEC,OAAQ,IAAKC,MAAO,MAClC,yBAAKF,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAEjC,4BACE,2JCLDC,G,OAAmB,CACvBC,UAAW,CACTC,OAAQ,CACNC,MAAO,IACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,OAIlB,cAAgB,CACd,UAAY,SACZ,OAAS,CACP,QAAU,CACR,QAAS,EACT,KAAO,WAET,QAAU,CACR,QAAS,EACT,KAAO,QAET,QAAS,GAEX,MAAQ,CACN,KAAO,CACL,SAAW,IACX,YAAc,CACZ,QAAU,IAGd,OAAS,CACP,SAAW,IACX,KAAO,GACP,SAAW,EACX,QAAU,EACV,MAAQ,GAEV,QAAU,CACR,SAAW,mBACX,SAAW,IAEb,KAAO,CACL,aAAe,GAGjB,OAAS,CACP,aAAe,OAoBRC,E,uKAZX,OACE,yBAAKb,UAAU,OACb,kBAAC,IAAD,CAAWA,UAAU,YACnBc,OAAUR,IAEZ,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GARUS,IAAMC,WC9CJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.a964d75b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n\treturn (\r\n\t\t<nav className=\"zone blue sticky\">\r\n\t\t\t<ul className=\"main-nav\">\r\n            \t<li><a href=\"../index.html\">Почетна</a></li>\r\n            \t<li><a href=\"https://suncanjenamesecini.github.io/moja_stranica/projekti/projekti.html\">Пројекти</a></li>\r\n\t\t\t\t<li><a href=\"https://suncanjenamesecini.github.io/moja_stranica/crtezi/crtezi.html\">Цртежи</a></li>\r\n\t\t\t\t<li><a href=\"https://suncanjenamesecini.github.io/moja_stranica/slike/slike.html\">Слике</a></li>\r\n\t\t\t\t<li><a href=\"https://suncanjenamesecini.github.io/moja_stranica/murali/murali.html\">Мурали</a></li>\r\n            \t<li><a href=\"https://suncanjenamesecini.github.io/moja_stranica/vez/vez.html\">Вез</a></li>\r\n\t\t\t\t<li className=\"push\"><a href=\"https://suncanjenamesecini.github.io/moja_stranica/o_meni/O_meni.html\">О мени</a></li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\n\r\nconst Dobrodoslica = () => {\r\n\treturn (\r\n\t\t<div className='dobrodoslica'>\r\n\t\t\t\r\n\t\t\t\t<div style={{ height: 250, width: 400 }}>\r\n\t\t\t\t<div style={{ height: 150, width: 400 }}>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t{'Добродошли на моју страницу!'}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Dobrodoslica;","import React from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Dobrodoslica from './components/Dobrodoslica/Dobrodoslica';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 250,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  },\n  \"interactivity\":{\n    \"detect_on\":\"canvas\",\n    \"events\":{\n      \"onhover\":{\n        \"enable\":true,\n        \"mode\":\"repulse\"\n      },\n      \"onclick\":{\n        \"enable\":true,\n        \"mode\":\"push\"\n      },\n      \"resize\":true\n    },\n    \"modes\":{\n      \"grab\":{\n        \"distance\":400,\n        \"line_linked\":{\n          \"opacity\":1\n        }\n      },\n      \"bubble\":{\n        \"distance\":400,\n        \"size\":40,\n        \"duration\":2,\n        \"opacity\":8,\n        \"speed\":3\n      },\n      \"repulse\":{\n        \"distance\":143.85614385614386,\n        \"duration\":0.4\n      },\n      \"push\":{\n        \"particles_nb\":4\n      },\n\n      \"remove\":{\n        \"particles_nb\":2\n      }\n    }\n  }\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params = {particlesOptions}\n        />\n        <Navigation />\n        <Dobrodoslica />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}